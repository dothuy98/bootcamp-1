クラス、インスタンス変数、メソッドの関係

クラスは概念を表し、メソッド、インスタンス変数と比べ抽象的です。
インスタンス変数はクラスの属性、性質、状態を表します。
メソッドはクラスの振る舞いになる。
以上のような関係がある。

インスタンス変数、インスタンスメソッドはクラスによって定義されるものという関係がある。
設計図(クラス)に書かれた車の情報(インスタンス変数)や動き(メソッド)の関係にある。

クラスはインスタンス変数にオブジェクトごとにどういう情報が入るのかという大枠を設定している。
クラスからオブジェクトを作成する際、オブジェクトごとにそれぞれが持っている情報をインスタンス変数という。

また、インスタンス変数はクラス内部からしか原則、アクセスできないため、メソッドを作成しアクセスする。
オブジェクトごとのインスタンス変数は固有であるため、インスタンスメソッドでインスタンス変数を参照した動きもインスタンス変数に合わせて固有の動き(処理)をする。

またメソッドはインスタンスメソッドとクラスメソッドの2種類が存在し、どちらもクラス内部で定義される。
使い分けとしてはインスタンスにアクセスしないがクラスに関連が深いものをクラスメソッドとして定義できる。
クラスメソッドをインスタンスメソッドから呼び出し、処理をわかりやすくするという使い方もできる。
呼び出す際はclass名.クラスメソッド名で呼び出せる。

（命名法について）
原則として、すべて文字と数字は分離しない。

クラス、モジュール名:
クラス名はキャメルケースで命名し、すべて大文字で記述する。
その際、_や-は用いないで区切りの次の文字を大文字にする。
注意点としてHTML、SMTPなどの略字は大文字のままにする場合がある。
略語+文字の場合、HTML_Somethingと書く場合もある。

クラスを定義しているファイル名・ディレクトリ名はクラス名をスネークケースにしたものを用いる。
また、ディレクトリ名はモジュールの名前空間をスネークケースに変更した名前を使用する。

ファイル名, ディレクトリ名 :
スネークケースで記述する。

メソッド、変数名 :
スネークケースで記述し、すべて小文字で記述する。
-などは用いない。
メソッドのアクセサにはget,setを用いず、値を読むときには"単語名"を用い、値を書くときは"単語名+="を用いる。
true, falseを返す述語メソッドは疑問符(?)でメソッド名を終わる。
破壊的(不可逆的)な変更は感嘆符(!)でメソッド名を終わる

定数名 :
スクリーミングスネークケースという記法で記述する。
すべてを大文字で記述し、単語の区切りを_でつなぐ。

(名前の付け方について)
正しく品詞を選ぶ。
クラス名 + メソッド名と並べたときに英語として適切かどうかが良い命名である。

クラスは名詞を用いる。
2つの単語をつなげる場合は形容詞 + 名詞、名詞 + 名詞を行う。
例) AttachFile -> x
    AttachedFile -> o

メソッド名動詞のみ、もしくは動詞 + 名詞を使う。
例) active -> x 形容詞
    activate -> o 動詞

    notify_expire -> x 動詞を続けている。
    notify_expiration -> o

Railsの場合だが、不可算名詞は使わないほうがよい。
> 単数・複数を使い分けるルールがある。
