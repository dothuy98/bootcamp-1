終了ステータスについて :
0~255の範囲の数が存在し、子プロセスの実行が完了した時、親プロセスに渡す値のこと。
$?で参照でき、これをもとに前のコマンドは正常に実行できたかどうかを判断し、条件分岐をつくるといった使い方ができる。
したがって正常に動作していない処理では1、正常に動作した処理では0を返すようにし、親プロセスを意識して設定する。
値が大きいほど深刻なエラーという意味がある。

（意味）
0 : 正常に終了できた
1 : エラー
2 : ビルトインコマンドの誤用(exprの引数で数値でなく文字を与えるなどで出力される）
※ビルトインコマンド :　シェルに組み込まれたコマンドのこと
126 : 実行できなかった。（実行権限なし）
128 : exitに不正な値を渡した。

（終了ステータスを返す）
exit n(0~255)でプログラムを終了し、親プロセスに$?という変数名で終了ステータスを返す。
return n(0~255)でも同様に終了ステータスを返すことができる。

(returnとexitの使い分け）
exit : 例外処理など即座に終了させたい場合。
return : 関数内で使用する。
そこまで両者に大きな違いはない。
