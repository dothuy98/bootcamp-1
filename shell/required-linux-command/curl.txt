curl : 
Client for URLsの略。
サーバーから、もしくはサーバーへデータ転送を行うことができるコマンド。

http,https,FTPなど様々なプロトコルに対応しておりファイル転送なども行うことができる。
> プロトコルはコンピュータ同士の通信をする際の手順やルールのこと。

curl <URL>でGETメソッドを指定しコンテンツを表示させることができる。curl -X GET <URL>と同じ意味になる。
POSTメソッドで実行する場合は`curl -X POST <URL>`とする。

(オプション)
-f : HTTP通信で400番台のレスポンスコードが返ってきた場合異常終了する。
     このオプションを指定しないと400番台でも終了ステータスが0になってしまう。
> レスポンスコードについて 
100~199 : 情報レスポンス
200~299 : 成功レスポンス
300~399 : リダイレクト
400~499 : クライアントエラー
500~599 : サーバーエラー
-I : レスポンスヘッダのみを取得する。レスポンスヘッダはアクセスしたサーバーの情報や接続のタイプなどレスポンスの内容を説明した内容が書かれている。
-o : ファイル名を指定し、指定したファイル名に出力をリダイレクトする。
-O : 転送元と同じ名前でファイルを保存する。
-L : リダイレクト先にもアクセスする。ファイルダウンロードによく使う。
-s : ダウンロードの進捗とエラーメッセージを表示させない。
-S : -sSとすると進捗のみ非表示にし、エラーメッセージは出力する。
-v : リクエストヘッダとレスポンスヘッダを標準エラー出力に表示する。リクエストヘッダはサーバにアクセスする内容やアクセスした自分の情報があるところ。
-# : プログレスバーを表示させる。シェルスクリプト内ではコメント扱いされてしまうためエスケープして使用する。
-u : アカウント名とパスワードを指定してリクエストする。`-u user-name:pass`で実行。パスワードを入力しない場合は実行時にパスワードを求められる。
--create-dirs : ディレクトリを作成してファイルを保存する。
-T : ファイルをアップロードする。
--ftp-create-dirs : ファイルをアップロードする際、ディレクトリが存在しない場合作成。

（いつ使えそうか）
・ファイルのダウンロードを行う。
> curl -OL <URL>

・ファイルを連番で指定してダウンロードする。
> curl --create-dirs -o "#1/sample#2.html" http://www.sample.co.jp/dir[1-6]/file[001-006].html
  #1と#2がそれぞれ[]で囲んだ該当の数値に置換されファイルを保存できる。
  存在しないファイルの場合はそのWEBサイトごとに決まっているページが存在しないことを表すぺージを保存することになる。

・自分で作成したWEBアプリケーションのテスト。その際、jqというコマンドをパイプラインでつなげるとJSONデータを人に見やすく加工してくれる。
curl <URL> | jq .

・FTP操作
ファイルの取得
> curl --user <user-name>:<password> <url>
ファイルのアップロード
> curl -T <upload-file> --user <user-name>:<pass-word> <url>
