&& :
AND制御演算子として動作する。
具体的には`command1 && command2`とした場合、command1が成功した場合のみcommand2を実行するという使い方ができる。
`command1 ; command 2`との違いとしては ; で区切った場合は、command1がエラーであっても関係なくcommand2が実行できる。

&&と逆の動きをする演算子の||がある。
`command1 || command2`とするとcommand1が異常終了した場合のみ、command2を実行する。

また、&&と||を組み合わせて
`command1 && command2 || command3`と記述すると、command1が成功した場合はcommand2を実行し、command1が異常終了する場合にはcommand3が実行される。

これによって成功したときの処理と失敗したときの処理を1行で分岐させるといった使い方ができ、if文で終了ステータスごとに分岐させる手間が減る。

command1 &&
# comment
command2 
のよう改行を挟んで実行することもできる。これは&&を記述した時点で次にコマンドを期待するように命令されるためである。

（いつ使えそうか）
・outというディレクトリが存在する場合は削除してから、ディレクトリを作成する。ない場合はそのまま作成する。
> cd out && cd ../ ; rm -rf out
  mkdir out

・スクリプト内でスクリプトを実行しテストを行う。成功している場合としていない場合に分けて出力を変更する。
> sh <shell-script> <parameter> && echo "ok!" || echo "error!!"
