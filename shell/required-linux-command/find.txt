find :
ファイル・ディレクトリの場所を検索する。
findのみを実行するとカレントディレクトリ以下のすべてのファイルを表示する。
ディレクトリを引数に指定するとそのディレクトリ以下のすべてのファイル・ディレクトリを表示する。
複雑な条件での検索が可能なコマンド。

（オプション）
-name : ファイルを名前で検索する。式としては`find <検索するディレクトリ> -name "*git*"`のように記述する。
        <検索するディレクトリ>を省略するとカレントディレクトリが自動で設定される。
-iname : 大文字と小文字を区別しないでファイル名を検索する。それ以外は-nameと同じ使い方ができる。
-regex : 正規表現を使用してファイルを検索する。
-type : ファイルタイプで検索を行う。`find ~ -type f`とするとホームディレクトリ上のファイルを出力してくれる。
> f : ファイル、d : ディレクトリ、p : 名前付きパイプ、 l : シンボリックリンクを検索できる。
  名前付きパイプは通常のパイプが一方向にデータを渡すのに対して双方向にデータをやり取りする仕組みのことで、プロセス間でデータを共有できる。
-atime : 指定した日にアクセスしたファイルを取得。0が今日、1が昨日、2が二日前を表す。
         三日以内のファイルは -3でアクセスでき、三日より前のファイルには +3でアクセスできる。
-mtime : 指定した日に更新されたファイルを参照できる。使い方は-atimeと同様で0を今日とし数字が増えるごとに前の日を表す。
-amin(-mmin) : 指定した数の分数だけ前の時間にアクセス（更新）したファイルを参照する。
-anewer : 指定したファイルの更新日時より後にアクセスしたファイルを検索する。
-newer : 指定したファイルの更新s日時よりあとに更新したファイルを検索する。
-empty : ファイル・ディレクトリの容量がない空のものを検索する。
-size : ファイルの容量で検索する。`-size -6c`で6バイト以下のものを検索し、`-size +6k`で6kByte以上のファイルを検索する。
-perm : パーミッションで検索を行う。パーミッションについてはchmod.txで詳しく扱う。
-and : 複数条件を適用し、すべての条件にあてはまるファイルのみを検索する。
> -name "xxx" -name "cc" などのように条件を続けて記述するとAND検索で処理する。
-or : 複数条件を使用し、いずれかの条件にあてはまるファイルを検索する。
-not : 条件に当てはまらないファイルを検索する。
-exec : 検索結果のファイルに対してコマンドを実行し処理する。このオプションはパイプを使用した方がわかりやすいように思う。

（いつ使えそうか）
・作成したファイル名がうろ覚えでどこに置いたか忘れてしまった。
find / -iname "*index*"
find environment/bootcamp/ -regex "[0-9]*.*txt$"
・ブラウザからファイルをダウンロードしたがどこにダウンロードされたかわからない。
find / -amin -20

