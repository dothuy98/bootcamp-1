chmod :
change file modes or Access Control Listsの略。
ファイルパーミッションを変更することができる。

ファイルパーミッションはll、ls -lで確認でき、出力の1列目の"-rwxrwxr-x"がパーミッションを表す。
また、そのファイルの所有者が3列目に記述され、ファイルの所有グループが4列目に記述される。
2列目の数字はディレクトリの個数でディレクトリの場合はその配下のディレクトリ、カレントディレクトリ、親のディレクトリの個数を表す。
パーミッションはセキュリティのために重要な存在である。
権限での制限がないと、
・サーバーにアクセスした人が間違ってサーバーのシステムを変更しうまくアプリケーションが動作しなくなってしまう。
・ワイルドカードで誤ってルートディレクトリのファイルも消してしまった。
などが起きてしまう。
そういった問題を起こさないようにファイルを守ってくれる役割を持つ。

（パーミッションの見方）
-rwxrwxr-xは4つの情報を表ている。
1文字目はファイルのタイプ、2~4文字目がファイルの所有者、5~7文字目がファイルの所有グループ、8~10文字目がその他に対する権限表す。
その他はファイル所有者でなく、そのグループにも入っていないがこのファイルにアクセスできるすべてのユーザーを表す。
※所有グループなどに関してはchown.txtで詳しく記述する。
1文字目の意味は 
- : ファイル
d : ディレクトリ
l : シンボリックリンク
という意味を持つ。
2文字目から3文字ずつで意味を読み取っていくことができる。
2文字目からの表記で使われる文字の意味は
- : その部分の権限がない。
r : 読み取り可能
w : 書き込み可能
x : 実行可能
> 実行権限が付与されていないディレクトリではそのディレクトリ内でファイル作成できない。
  また、ファイル名の変更や空ディレクトの削除はそのファイルの親ディレクトリの権限に依存する。
※ファイルの所有者の権限xがsの場合。
> Set User ID(SUID)がファイルに設定されていることを表す。これにより常にそのファイルが指定したユーザーで実行されることを表す。
  SUIDがrootの場合がなんの認証もなしにそのコマンドを実行できるため扱いには注意が必要。
※ファイルの所有グループのxがsの場合。
> これはSet Group ID（SGID)がファイルに設定されていることを意味しており、実行されるときに所有グループの権限でファイルが実行される。
  ディレクトリにSGIDが設定されている場合、そのディレクトリ配下のファイル・ディレクトリは全てSGIDに設定された所有グループと同じになる。
  使い道としてはグループで共有してファイルを使用する場合などが考えられる。

例として-rwxr-x---の場合は、
タイプ : ファイル
ファイルの所有者 : 読み取り、書き込み、実行すべて可能。
ファイルの所有グループ : 読み取りと実行が可能で書き込みはできない。
その他 : すべての権限がなく、ファイル名しか見ることができない。

（chmodでの変更の仕方）
chmod <mode> <file_name>の形で変更する。
<mode>での権限の変更方法は数字で変更する場合とアルファベットで変更する場合の2通りがある。

・数字で変更する場合
chmod 764 <file_name>のように3桁の数字で指定する。
100の位が所有者、10の位が所有グループ、1の位がその他への変更を表す。
また、数字の意味については3つの権限を表す数字の足し算した結果になっており、
4が読み取り、2が書き込み、1が実行の権限を表す。
また0は何も権限がない状態を表す。
ファイル所有者に対してすべての権限を与える場合は4 + 2 + 1で7を1の位に記述する。
また千の位で4がSUIDを指定し、2がSGID、1がスティッキービットを表し、同様に3つを足して表現する。
> スティッキービットはディレクトリにのみ設定できる権限。
  そのディレクトリ配下のファイル・ディレクトリの名前の変更、削除ができるのはファイル所有者のみに限定できる。

・アルファベットで指定する。
こちらは<mode>を"[権限の変更対象][記号][権限]"という形で記述する。
[権限の変更対象]を意味するアルファベットは
a : すべてのファイル権限を対象にする。
u : ファイル所有者を対象にする。
g : ファイルの所有グループを対象にする。
o : その他を対象にする。
[記号]の意味は
+ : 選択したアクセス権を与える。
- : 選択したアクセス権を削除する
= : 選択したアクセス権にする
[権限]を意味するアルファベットは`ls -l`の記号と同じ意味で
r : 読み込み権限
w : 書き込み権限
x : 実行権限
X : どれか1つでも実行権限を持つ場合、実行権限を追加・削除する。
s : SGIDを設定する。そのときの所有グループが設定される
t : スティッキービットを設定する。
u : ファイル所有者の持つ権限を対象にする
g : ファイル所有者グループの持つ権限を対象にする
o : その他の持つ権限を対象にする
を表す。
したがって使い方としては、
chmod a=rwx <file_name>ですべての対象にすべて権限に変更する
chmod o-rwx <file_name>でその他を対象にしすべての権限を削除する。
といった使い方ができる。

(オプション）
-R : ディレクトリを指定した場合、その配下のファイル・ディレクトも再帰的に変更する。
-v : 処理した内容を出力する。
--reference=<file_name> : <file_name>と同じ権限を付与する。
-c : 変更が行われた場合のみ出力。
-f : ほとんどのエラーメッセージを出力しない。

（いつ使えそうか）
・アプリケーションをサーバー上で作成したときそのディレクトリを外から変更できないように権限を制限する。
> chmod 700 <file_name>

・shファイルをsource <shell_script>でシェル内で実行したいときに権限を付与する。
> chmod 700 <shell_script>

・アルバイトと正社員でグループを分け、正社員のみファイルの書き込みを可能にする。
> chmod 775 <fild_name>
※ ファイル所有グループはchown <user>:<group> <file_name>で変更する。
